@page "/spriteatlas"
@using Microsoft.AspNetCore.Components.Forms

<MudContainer Class="pa-4">
    <MudText Typo="Typo.h4" GutterBottom>Sprite Atlas Generator</MudText>
    <MudText Typo="Typo.body1" Class="mb-4">
        Lade mehrere Sprite-Bilder hoch und generiere daraus einen Atlas.
    </MudText>

    <!-- Upload -->
    <MudPaper Class="pa-4 mb-4">
        <MudText Typo="Typo.subtitle1">Bilder hochladen</MudText>
        <InputFile OnChange="OnFilesSelected" multiple accept="image/*" />
    </MudPaper>

    <!-- Preview der hochgeladenen Bilder -->
    @if (_images.Count > 0)
    {
        <MudText Typo="Typo.subtitle1" Class="mb-2">Hochgeladene Sprites</MudText>
        <MudGrid>
            @foreach (var img in _images)
            {
                <MudItem xs="6" sm="3" md="2">
                    <MudPaper Class="pa-2 d-flex justify-center">
                        <img src="@img.DataUrl" alt="@img.Name" style="max-width:100%; max-height:100px;" />
                    </MudPaper>
                </MudItem>
            }
        </MudGrid>

        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="GenerateAtlas" Class="mt-4">
            Generate Atlas
        </MudButton>
    }

    <!-- Preview des Atlas -->
    @if (!string.IsNullOrEmpty(_atlasPreview))
    {
        <MudDivider Class="my-4" />
        <MudText Typo="Typo.subtitle1">Atlas Vorschau</MudText>
        <MudPaper Class="pa-2 mt-2">
            <img src="@_atlasPreview" alt="Atlas Preview" style="max-width:100%;" />
        </MudPaper>
    }
</MudContainer>

@code {
    private List<SpriteImage> _images = new();
    private string? _atlasPreview;

    private async Task OnFilesSelected(InputFileChangeEventArgs e)
    {
        _images.Clear();
        foreach (var file in e.GetMultipleFiles())
        {
            using var stream = file.OpenReadStream(maxAllowedSize: 10 * 1024 * 1024);
            using var ms = new MemoryStream();
            await stream.CopyToAsync(ms);
            var bytes = ms.ToArray();
            var base64 = Convert.ToBase64String(bytes);
            _images.Add(new SpriteImage
            {
                Name = file.Name,
                DataUrl = $"data:{file.ContentType};base64,{base64}"
            });
        }
    }

    private void GenerateAtlas()
    {
        // TODO: Atlas generieren (Bin-Packing Algorithmus)
        // Aktuell nur Platzhalter (zeigt erstes Bild als Atlas)
        _atlasPreview = _images.FirstOrDefault()?.DataUrl;
    }

    private class SpriteImage
    {
        public string Name { get; set; } = "";
        public string DataUrl { get; set; } = "";
    }
}
